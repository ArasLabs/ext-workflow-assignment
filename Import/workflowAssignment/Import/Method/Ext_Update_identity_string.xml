<AML>
 <Item type="Method" id="8A475BC6EEAC4651AE9C70B6EB7F978B" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[#region Aras Innovator Method本体

            Item qry1 = this.newItem();
            Item qry2 = this.newItem();
            Item qry3 = this.newItem();
            StringBuilder identity_str = new StringBuilder();
            StringBuilder identity_id = new StringBuilder();
            Item result = this.newItem();
            Innovator inn = this.getInnovator();

            string dtailID = this.getID();


            //[Ext_Workflow_ADtail Identity]情報の取得
            qry1 = this.newItem("Ext_Workflow_ADtail Identity", "get");
            qry1.setProperty("source_id", dtailID);
            qry1.setAttribute("select", "id,related_id");
            result = qry1.apply();
            //CCO.Utilities.WriteDebug("test", "result" + result.ToString());
            if (!result.isError())
            {
                //Identity情報を文字列に変換
                for (int i = 0; i < result.getItemCount(); i++)
                {
                    Item ditalItm = result.getItemByIndex(i);
                    //id
                    //CCO.Utilities.WriteDebug("test", "Identity ID:" + ditalItm.getProperty("related_id", ""));
                    //keyed_name
                    //CCO.Utilities.WriteDebug("test", "Identity keyed_name:" + ditalItm.getPropertyAttribute("related_id", "keyed_name"));

                    if (i != 0) { identity_str.Append(", "); identity_id.Append(", "); }
                    identity_str.Append(ditalItm.getPropertyAttribute("related_id", "keyed_name"));
                    identity_id.Append(ditalItm.getProperty("related_id", ""));
                }
            }

            //[Ext_Workflow_AssignDtail]への文字列属性の更新
            this.setProperty("ext_identity_string", identity_str.ToString());
            this.setProperty("ext_identity_id", identity_id.ToString()); ;
            this.setAttribute("serverEvents", "0");
            //ロック状態確認
            int lockres = this.getLockStatus();
            string action = "edit";
            if (lockres == 1) { action = "update"; }
            result = this.apply(action);
            //CCO.Utilities.WriteDebug("test", "result2" + result.ToString());

            return this;
            
            #endregion]]></method_code>
  <method_type>C#</method_type>
  <name>Ext_Update_identity_string</name>
 </Item>
</AML>